events {
    worker_connections 4096;
}

http {
    ${RESOLVER_DIRECTIVE}
    upstream api_backend {
        zone api_backend 64k;
        server ${FINAL_API_SERVICE}:${GONKA_API_PORT} resolve;
    }

    upstream chain_rpc_backend {
        zone chain_rpc_backend 64k;
        server ${FINAL_NODE_SERVICE}:${CHAIN_RPC_PORT} resolve;
    }

    upstream chain_api_backend {
        zone chain_api_backend 64k;
        server ${FINAL_NODE_SERVICE}:${CHAIN_API_PORT} resolve;
    }

    upstream chain_grpc_backend {
        zone chain_grpc_backend 64k;
        server ${FINAL_NODE_SERVICE}:${CHAIN_GRPC_PORT} resolve;
    }

    # Dashboard upstream - only included if DASHBOARD_PORT is set
    ${DASHBOARD_UPSTREAM}

    # Enable gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    server {
        ${LISTEN_HTTP}
        ${LISTEN_HTTPS}
        server_name ${SERVER_NAME};
        ${SSL_CONFIG}

        # Increase client body size for large requests
        client_max_body_size 10M;

        # Health check endpoint
        location = /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # API routes - restricted to v1 only
        location /api/v1/ {
            proxy_pass http://api_backend/v1/;
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $$scheme;
            proxy_set_header Authorization $$http_authorization;

            # Handle WebSocket connections if needed
            proxy_http_version 1.1;
            proxy_set_header Upgrade $$http_upgrade;
            proxy_set_header Connection "upgrade";

            # Extended timeouts for inference API (20 minutes)
            proxy_connect_timeout 120s;
            proxy_send_timeout 1200s;
            proxy_read_timeout 1200s;
        }

        # Direct API v1 routes - bypasses /api/ prefix
        location /v1/ {
            proxy_pass http://api_backend/v1/;
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $$scheme;
            proxy_set_header Authorization $$http_authorization;

            # Handle WebSocket connections if needed
            proxy_http_version 1.1;
            proxy_set_header Upgrade $$http_upgrade;
            proxy_set_header Connection "upgrade";

            # Extended timeouts for inference API (20 minutes)
            proxy_connect_timeout 120s;
            proxy_send_timeout 1200s;
            proxy_read_timeout 1200s;
        }

        # Chain RPC endpoint
        location /chain-rpc/ {
            proxy_pass http://chain_rpc_backend/;
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $$scheme;

            # WebSocket support for RPC connections
            proxy_http_version 1.1;
            proxy_set_header Upgrade $$http_upgrade;
            proxy_set_header Connection "upgrade";

            # Standard timeouts for chain API (2 minutes)
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        # Chain API endpoint (REST API)
        location /chain-api/ {
            proxy_pass http://chain_api_backend/;
            proxy_set_header Host $$host;
            proxy_set_header X-Real-IP $$remote_addr;
            proxy_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $$scheme;
            proxy_set_header Authorization $$http_authorization;

            # Standard timeouts for chain API (2 minutes)
            proxy_connect_timeout 30s;
            proxy_send_timeout 120s;
            proxy_read_timeout 120s;
        }

        # Chain gRPC endpoint (if needed)
        location /chain-grpc/ {
            grpc_pass grpc://chain_grpc_backend;
            grpc_set_header Host $$host;
            grpc_set_header X-Real-IP $$remote_addr;
            grpc_set_header X-Forwarded-For $$proxy_add_x_forwarded_for;
            grpc_set_header X-Forwarded-Proto $$scheme;
            grpc_set_header Authorization $$http_authorization;

            # Standard timeouts for chain gRPC (2 minutes)
            grpc_connect_timeout 30s;
            grpc_send_timeout 120s;
            grpc_read_timeout 120s;
        }

        # Root location - either dashboard or not configured page
        ${ROOT_LOCATION}

        # Default error pages
        error_page 404 /404.html;
        
        location = /404.html {
            internal;
            return 404 "Not Found\n";
            add_header Content-Type text/plain;
        }
    }
}


